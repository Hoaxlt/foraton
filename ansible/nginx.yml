---
- name: Configure Nginx Web Server
  hosts: webservers
  become: yes
  vars:
    nginx_package: nginx
    nginx_service: nginx
    nginx_user: nginx
    nginx_conf_path: /etc/nginx/nginx.conf
    nginx_sites_available: /etc/nginx/sites-available
    nginx_sites_enabled: /etc/nginx/sites-enabled
    server_name: example.com
    listen_port: 80
    root_dir: /var/www/html
    index_file: index.html

  tasks:

    - name: Create web root directory
      file:
        path: "{{ root_dir }}"
        state: directory
        owner: "{{ nginx_user }}"
        group: "{{ nginx_user }}"
        mode: '0755'

    - name: Deploy index.html
      copy:
        content: "<html><body><h1>Welcome to {{ server_name }}</h1></body></html>"
        dest: "{{ root_dir }}/{{ index_file }}"
        owner: "{{ nginx_user }}"
        group: "{{ nginx_user }}"
        mode: '0644'

    - name: Configure Nginx main configuration
      template:
        src: templates/nginx.conf.j2
        dest: "{{ nginx_conf_path }}"
        owner: root
        group: root
        mode: '0644'
      notify: restart nginx

    - name: Configure default site
      template:
        src: templates/default-site.conf.j2
        dest: "{{ nginx_sites_available }}/default"
        owner: root
        group: root
        mode: '0644'
      notify: restart nginx

    - name: Enable default site
      file:
        src: "{{ nginx_sites_available }}/default"
        dest: "{{ nginx_sites_enabled }}/default"
        state: link
      notify: restart nginx

    - name: Ensure Nginx is running and enabled
      service:
        name: "{{ nginx_service }}"
        state: started
        enabled: yes

    - name: Check Nginx availability
      wait_for:
        port: "{{ listen_port }}"
        timeout: 10
      delegate_to: localhost

  handlers:
    - name: restart nginx
      service:
        name: "{{ nginx_service }}"
        state: restarted